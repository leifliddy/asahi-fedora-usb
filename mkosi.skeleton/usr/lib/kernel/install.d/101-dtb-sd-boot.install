#!/usr/bin/bash

# set -x

[[ -z $KERNEL_INSTALL_MACHINE_ID ]] && exit 0
# ensure that systemd-boot is installed
[[ $(command -v bootctl) ]] || exit 0
[[ $(bootctl is-installed) != 'yes' ]] && exit 0

[[ -f /etc/os-release ]] && . /etc/os-release

COMMAND="$1"
KERNEL_VERSION="$2"
BOOT_DIR_ABS="$3"
KERNEL_IMAGE="$4"

KERNEL_DIR="${KERNEL_IMAGE%/*}"

MACHINE_ID=$KERNEL_INSTALL_MACHINE_ID

# If ${BOOT_DIR_ABS} exists, some other boot loader is active.
#[[ -d "${BOOT_DIR_ABS}" ]] && exit 0

# UKIs are BLS type 2 entries, 90-uki-copy.install takes care of them
[ "x$KERNEL_INSTALL_LAYOUT" != "xuki" ] || exit 0

case "$COMMAND" in
    add)
        if [[ "${KERNEL_DIR}" != "/boot" ]]; then
            # rename to match the name used in the pseudo-BLS snippet above
            cp --remove-destination --preserve=timestamps -T "${KERNEL_IMAGE}" "/boot/vmlinuz-${KERNEL_VERSION}"
            command -v restorecon &>/dev/null && restorecon -R "/boot/vmlinuz-${KERNEL_VERSION}"

            [[ -e "$KERNEL_DIR/dtb" ]] || continue
            cp --remove-destination --preserve=timestamps -rT "$KERNEL_DIR/dtb" "/boot/dtb-${KERNEL_VERSION}"
            command -v restorecon &>/dev/null && restorecon -R "/boot/dtb-${KERNEL_VERSION}"
        fi
        exit 0
        ;;
    remove)
        [[ -e "/boot/dtb-${KERNEL_VERSION}" ]] && rm -rf "/boot/dtb-${KERNEL_VERSION}"
        exit 0
        ;;
    *)
        ;;
esac
